@inproceedings{LNR2013:CANDAR,
 abstract = {For parallel programs, correctness by construction
is an essential feature since debugging is almost
impossible. Building correct programs by
construction is not a simple task, and usually the
methodologies used for this purpose are rather
theoretical and based on a pen-and-paper style. A
better approach could be based on tools and theories
that allow a user to develop an efficient parallel
application by easily implementing simple programs
satisfying conditions, ideally automatically
proved. Powerlists theory and its variants represent
a good theoretical base for such an approach, and
the Coq proof assistant is a tool that could be used
for automatic proofs. The goal of this paper is to
model the powerlist theory in Coq, and to use this
modelling to program and reason about parallel
programs in Coq. This represents the first step in
building a framework to ease the development of
correct and verifiable parallel programs.},
 address = {Matsuyama, Japan},
 author = {Loulergue, Frédéric and Niculescu, Virginia
and Robillard, Simon},
 booktitle = {First International Symposium on Computing and
Networking (CANDAR)},
 doi = {10.1109/CANDAR.2013.17},
 hlpp_category = {international_conference},
 hlpp_educore = {Un­ran­ked},
 hlpp_rate = {long paper 12},
 pages = {57-65},
 publisher = {IEEE Computer Society},
 title = {Powerlists in Coq: Programming and Reasoning},
 year = {2013}
}

