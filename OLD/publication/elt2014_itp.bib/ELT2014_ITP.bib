@inproceedings{ELT2014:ITP,
 abstract = {The integration of the generate-and-test paradigm
and semi-rings for the aggregation of results
provides a parallel programming framework for large
scale data-intensive applications. The so-called GTA
framework allows a user to define an inefficient
specification of his/her problem as a composition of
a generator of all the candidate solutions, a tester
of valid solutions, and an aggregator to combine the
solutions. Through two calculation theorems a GTA
specification is transformed into a
divide-and-conquer efficient program that can be
implemented in parallel. In this paper we present a
verified implementation of this framework in the Coq
proof assistant: efficient bulk synchronous parallel
functional programs can be extracted from naive GTA
specifications. We show how to apply this framework
on an example, including performance experiments on
parallel machines.},
 address = {Wien, Austria},
 author = {Emoto, Kento and Loulergue, Frédéric and
Tesson, Julien},
 booktitle = {Interactive Theorem Proving (ITP)},
 doi = {10.1007/978-3-319-08970-6_17},
 hlpp_category = {international_conference},
 hlpp_educore = {A},
 hlpp_rate = {52},
 number = {8558},
 pages = {258-274},
 publisher = {Springer},
 series = {LNCS},
 title = {A Verified Generate-Test-Aggregate Coq Library for
Parallel Programs Extraction},
 year = {2014}
}

